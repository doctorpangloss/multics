/** *     Copyright © Benjamin S. Berman, 2012 *     All Rights Reserved * This file is part of multics. multics is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. multics is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with multics.  If not, see <http://www.gnu.org/licenses/>. * */package  {	import fl.transitions.Tween;	import fl.transitions.easing.*;	import flash.display.*;	import flash.events.*;	import flash.net.*;	import flash.utils.Timer;	import flash.events.TimerEvent;	import Typewriter;	import fl.text.TLFTextField;	import com.google.analytics.AnalyticsTracker;		public class EmailGame {				var so:SharedObject;		var t:Typewriter;		var root:Object;		var extras:MovieClip;		var blanks:int;		var tip:Function;		var tracker:AnalyticsTracker;		public static var MAX_EMAILS:int = 3;				public function EmailGame(_typewriter:Typewriter, _root:Object, _extras:MovieClip, _tip:Function,_tracker:AnalyticsTracker) {						t = _typewriter;			root = _root;			extras = _extras;			tip = _tip;			tracker = _tracker;						so = SharedObject.getLocal("ctss");						if (!so.data.emailsSent) {				so.data.emailsSent = 0;			}						if (!so.data.theDateString) {				so.data.theDateString = new Date().toDateString();			} else if (so.data.theDateString != new Date().toDateString()) {				so.data.emailsSent = 0;			}						so.flush();		}		var username:String = "benjamin.s.berman@gmail.com";		var filename:String;		var msg:String = "";				function start() {			startMailGame();		}				function startMailGame():void {			tip("Type LOGIN USER NAME and hit return to log into the system. For example, if your name is JOHN DOE, type LOGIN JOHN DOE and hit return.");			msg = "";			blanks = 0;			t.ready();			t.readLine(login);		}				function login(s:String):void {			s = s.toLowerCase();			if (s.search(/^login/g) > -1) {				t.wait();				var matches:Array = s.match(/login +(\S*.+)/);				if (matches.length > 0) {					username = String(matches[1]).toUpperCase();					tracker.trackEvent("email","chose username",username,1.0);//					if (username.search(/\b[A-Z0-9._%+-]+@(?:[A-Z0-9-]+\.)+[A-Z]{2,4}\b/) == -1) {//						username = "noreply@nytimes.com";//					}				} else {					tracker.trackEvent("email","chose guest","GUEST",1.0);					t.writeLine("NO USER SPECIFIED, USING GUEST.");					username = "GUEST";				}				var d:Date = new Date();				t.writeLine(" " + username + " LOGGED IN " + d.month.toString() + "/" + d.day.toString() + " " + d.hours.toString() + d.minutes.toString() + "." + Number((d.seconds * 10.0) / 60.0).toFixed(0));				t.addEventListener(Event.COMPLETE,function kq(e:Event):void {								   tip("Before you can send an e-mail, you must write it using a program called EDL. Type EDL MESSAGE TXT and hit return to get started. This creates a new file called MESSAGE TXT.");								   t.removeEventListener(Event.COMPLETE,kq);								   });				t.ready();				tracker.trackPageview("/email/typeset");				t.readLine(typeset);			} else {				tracker.trackEvent("mistakes","logging into email",s,1.0);				t.readLine(login,"'" + s + "' NOT FOUND.");				t.ready();			}		}				function typeset(s:String):void {			s = s.toLowerCase();			if (s.search(/^edl/g) > -1) {				t.wait();				if (s.split(" ").length > 2) {					var names:Array = s.split(" ");					filename = names[1] + " " + names[2];				} else {					filename = "MESSAGE TXT";				}				t.writeLine("Input:");				tip("Type your e-mail using as many lines as you would like. When you're done, hit return twice. This saves your message.");				tracker.trackPageview("/email/edl/input");				t.readLine(storeLine);			} else {				tracker.trackEvent("mistakes","starting edl",s,1.0);				t.readLine(typeset,"'" + s + "' NOT FOUND.");				t.ready();			}		}				function inputMode() {			t.writeLine("Input:");			tip("You have switched back to Input mode. Begin writing from where you left off. To save and send your message, hit return twice.");			t.readLine(storeLine);		}				function editMode() {			t.writeLine("Edit:");			tip("Now type FILE and hit enter to save your message. We will proceed to use the MAIL command. If you would like to start over, type QUIT, hit enter, and then type EDL MESSAGE TXT to create a new message.");			t.readLine(command);		}				function command(s:String) {			if (s=="") {				blanks++;			} else {				blanks = 0;			}			if (blanks >= 1) {				blanks = 0;				inputMode();			} else {				if (s.toLowerCase() == "file") {					t.ready();					tracker.trackPageview("/email/mail");					mailCommand();				} else if (s.toLowerCase() == "quit") {					t.writeLine("*");					tip("Type EDL MESSAGE TXT and hit return to get started. This creates a new file called MESSAGE TXT.");					t.ready();					t.readLine(typeset);				} else {					t.readLine(command);					tracker.trackEvent("mistakes","using edit mode",s,1.0);				}			}		}						function storeLine(s:String) {			trace(s);			if (s=="") {				blanks++;			} else {				blanks = 0;			}			if (blanks >= 1) {				blanks = 0;				tracker.trackPageview("/email/edl/edit");				editMode();			} else {				msg+=s+"\n";				t.readLine(storeLine);			}		}				function mailCommand() {			tip("The MAIL command is very simple. It takes the form of MAIL FILE NAME ADDRESS. In this case, type MAIL " + filename.toUpperCase() + " address@example.com. Send a vintage e-mail to yourself or a friend!");			t.readLine(mail);		}				function mail(s:String) {			t.wait();			s = s.toLowerCase();			if (s.search(/^mail/g) > -1) {				if (s.split(" ").length == 4) {					tip("MAIL is unable to verify e-mail addresses. Please check that the email address you’ve entered is correct.");					var address:String = s.split(" ")[3];					trace(address);					tracker.trackPageview("/email/end");					sendEmail(address);				} else {					tracker.trackEvent("mistakes","using mail command, incorrect args",s,1.0);					t.writeLine('Instructions\n MAIL name1 name2 email...\nwhere "name1 name2" is the file to be mailed, and "email1" is the address to which it is to be sent.');					t.ready();					t.readLine(mail);				}			} else {				tracker.trackEvent("mistakes","using mail command",s,1.0);				t.readLine(mail,"'" + s + "' NOT FOUND.");			}		}				function sendEmail(d:String):void {			tracker.trackEvent("email","sent email","total emails",1.0);			tracker.trackEvent("email","sent email","sent emails per user per day",so.data.emailsSent);			if (so.data.emailsSent >= EmailGame.MAX_EMAILS && so.data.theDateString == new Date().toDateString()) {				tracker.trackEvent("spam","email spam","spam",1.0);				t.writeLine("YOU HAVE EXCEEDED YOUR TIME FOR THE SYSTEM TODAY. THE MESSAGE WAS NOT SENT SUCCESFULLY.");				tip("Please try to limit the number of messages you send per day. You can send more messages tomorrow.");				t.next(function v15():void {					root.gotoAndPlay("back to menu from email");					   });			} else {				var loader:URLLoader = new URLLoader();				var message:URLRequest = new URLRequest("http://www.benberman.com/send-email.php");				message.method = URLRequestMethod.POST;				loader.dataFormat = URLLoaderDataFormat.TEXT;				var variables = new URLVariables();				variables.sender_mail = username;				variables.compressed = Multics.encodeMessage("FROM: " + username + "\n" + msg);				variables.destination_addr = d;				variables.sender_subject = "From the NYTimes Opinionator Blogs/Errol Morris: YOU HAVE MAIL BOX FROM " + username;				variables.sender_message = msg;				//Multics.encodeMessage(msg);				variables.sender_name = username;				variables.complete_url = Multics.url + "?" + variables.compressed;				message.data = variables;												loader.addEventListener(Event.COMPLETE, function (e:Event):void {//					trace(e);//					if (loader.data.output == "error") {//						onError(null);//					} else {						tip("Your message has been successfully sent!");						so.data.emailsSent = so.data.emailsSent + 1;						so.flush();						t.writeLine("EMAIL SENT.");						trace(URLLoader(e.target).data);						t.yesNo(function y2() {startMailGame();}, function n2() {root.gotoAndPlay("back to menu from email");},"WOULD YOU LIKE TO SEND ANOTHER MAIL?");					//}				});//				function onStatus(e:Event):void {//					trace(e);//				}				loader.addEventListener(IOErrorEvent.IO_ERROR, function onError(e:IOErrorEvent) {					tip("This is not a simulated error. Unfortunately, something is not working on our end. Thank you for your patience.");					t.yesNo(function y1() {mailCommand();}, function n1() {root.gotoAndPlay("back to menu from email");},"A NETWORK ERROR OCCURRED. COULD NOT SEND MESSAGE. TRY AGAIN?");				});//				loader.addEventListener(HTTPStatusEvent.HTTP_RESPONSE_STATUS,onStatus);//				loader.addEventListener(HTTPStatusEvent.HTTP_STATUS,onStatus);//				loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR,onStatus);				loader.load(message);			}		}	}	}