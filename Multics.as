/** *     Copyright © Benjamin S. Berman, 2012 *     All Rights Reserved * This file is part of multics. multics is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. multics is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with multics.  If not, see <http://www.gnu.org/licenses/>. * */package  {		import flash.display.MovieClip;	import flash.display.DisplayObject;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.external.*;	import formatter.Base64;	import com.google.analytics.AnalyticsTracker;	import com.google.analytics.GATracker;	import flash.utils.ByteArray;	import flash.events.MouseEvent;	import flash.events.Event;	import fl.transitions.Tween;	import fl.transitions.easing.None;			public class Multics extends MovieClip {				public var tracker:AnalyticsTracker;		var blinkTimer:Timer;		var blinkList:Array = [];		public var pg:ProgrammingGame;				public function Multics() {			// constructor code			blinkTimer = new Timer(700);			blinkTimer.addEventListener(TimerEvent.TIMER,enumBlinks,false,0,true);		}				public function set tip(value:String):void {			tipText.text = value;			extras.infoI.gotoAndStop(1);			blink(tipText);			blink(extras.infoI);		}				protected function enumBlinks(e:TimerEvent):void {			var m:DisplayObject;			var life:int;			for (var i:int = 0; i < blinkList.length; i++) {				m = blinkList[i][0];								if (blinkList[i][1] > 0) {					m.visible = !m.visible;					blinkList[i][1]--;				}			}		}				protected function blink(m:DisplayObject) {			blinkList.push([m,2]);			blinkTimer.reset();			blinkTimer.start();		}				public static function get url():String {			try {				return ExternalInterface.call("window.location.href.toString");			} catch (e:Error) {				return "";			}			return "";		}				public static function get message():String {			var u:String = Multics.url;			if (url != "") {				trace(u);				var txt:Array = u.split("?");				if (txt.length > 1) {					try {						var bytes:ByteArray = new ByteArray();						bytes = formatter.Base64.Decode(txt[1]);						bytes.uncompress();						return bytes.toString();					} catch (e:Error) {						return "";					}				} else {					return "";				}			} else {				return "";			}			return "";		}				public static function encodeMessage(input:String):String {			var bytes:ByteArray = new ByteArray();			bytes.writeUTFBytes(input);			bytes.compress();			var o:String = Base64.Encode(bytes);			trace(o);			return o;		}				function printMessage(txt:String):void {			tracker.trackPageview("menu/message");			t.writeLine("YOU HAVE RECEIVED A MESSAGE. PRINTING IT NOW...");			t.writeLine(txt);			t.writeLine("-");		}				function onLoadComplete(event:Event):void {			tracker = new GATracker(this.root,"UA-11459946-3","AS3",false);			t = new Typewriter(typewriterGraphics.leftText, 50.0, typewriterGraphics.rightText, typewriterGraphics.playhead, typewriterGraphics.keystrokes, atTheReady, tracker, 31.0);						extras.tryAgainButton.visible = false;			extras.skipButton.visible = false;			extras.memoClip.visible = false;			extras.timeRemainingPill.visible = false;						var msg:String = message;			if (msg != "") {				printMessage(msg);			}						t.writeLine("DID MY BROTHER INVENT E-MAIL\nWITH TOM VAN VLECK?");			t.writeLine("FIND OUT ON THIS CTSS TERMINAL.");						function firstBlend(e:Event):void {				t.removeEventListener(Event.COMPLETE,firstBlend);				gotoAndPlay(2);			}						clickToReturn.visible = false;						function onActivate(e:Event):void {				clickToReturn.visible = false;			}						function onDeactivate(e:Event):void {				clickToReturn.visible = true;			}						stage.addEventListener(Event.ACTIVATE,onActivate);			stage.addEventListener(Event.DEACTIVATE,onDeactivate);						t.addEventListener(Event.COMPLETE,firstBlend);		}				public function menuStartFrame():void {			extras.tryAgainButton.visible = false;			extras.skipButton.visible = false;			extras.memoClip.visible = false;			extras.programButton.visible = true;			extras.sendButton.visible = true;			extras.readButton.visible = true;			extras.memoClip.alpha = 1.0;			extras.timeRemainingPill.visible = false;			extras.backButton.visible = false;			extras.timeRemainingPill.timeText.text = "600.0 s";			blink(extras.sendButton);			blink(extras.programButton);			tip = "Click a button to get started on a 1965-vintage Compatible Time Sharing System terminal.\nPlay a programming game or send an e-mail.";			tracker.trackPageview("/menu/0");		}				public function menuFrame():void {			function programStart(e:MouseEvent):void {				tracker.trackPageview("/program/0");				gotoAndPlay("program start");			}						function emailStart(e:MouseEvent):void {				tracker.trackPageview("/email/0");				gotoAndPlay("send start");			}						function menuStart(e:MouseEvent):void {				tracker.trackPageview("/menu/0");				if (pg) {					pg.ti.stop();				}				t.cancel();				if (currentFrame > 209) {					gotoAndPlay("back to menu from email");				} else {					gotoAndPlay("menu start");				}			}						extras.programButton.addEventListener(MouseEvent.CLICK,programStart);			extras.sendButton.addEventListener(MouseEvent.CLICK,emailStart);			extras.backButton.addEventListener(MouseEvent.CLICK,menuStart);						stop();		}				public function program1Frame():void {			extras.programButton.visible = false;			extras.sendButton.visible = false;			extras.readButton.visible = false;			extras.memoClip.visible = true;			extras.backButton.visible = true;			tip = "Programming is difficult, especially in a long-extinct language like MAD. Many familiar words have entirely different meanings in the context of computer code. But with the help of a series of crossword puzzle-style clues, you can recreate parts of the programming of the MAIL command."			tracker.trackPageview("/program/1");		}				public function program2Frame():void {			t.speed = 0.8;			t.writeLine("\nLET'S TRY WRITING A PART OF THE 'MAIL' PROGRAM. YOU WILL BE SHOWN LINES OF CODE FROM 'MAIL' WITH ONE WORD REPLACED BY A BLANK. YOU WILL BE GIVEN A CLUE, LIKE CROSSWORD CLUES, TO HELP YOU FIGURE OUT WHAT WORD TO TYPE. WHEN YOU ARE FINISHED, YOU CAN SEND AN E-MAIL USING THE PROGRAM YOU HAVE JUST WRITTEN.");						if (pg) {				pg.ti.stop();			}						t.next(				function v11():void {					var myTween:Tween = new Tween(extras.memoClip, "alpha", fl.transitions.easing.None.easeNone, 1, 0, 1.0, true);					myTween.start();					tracker.trackPageview("/program/2");					t.readLine(						function v12(s:String):void {							t.speed = 1.0;							tracker.trackPageview("/program/3");							gotoAndPlay("program 3");						},						"PRESS RETURN TO CONTINUE."					);				}			);   			stop();		}				public function program3Frame():void {			extras.timeRemainingPill.timeText.text = ProgrammingGame.START_TIME.toFixed(1) + " s";			extras.timeRemainingPill.visible = true;			blink(extras.timeRemainingPill);			var myTween2:Tween = new Tween(extras.timeRemainingPill, "alpha", fl.transitions.easing.None.easeNone, 0, 1, 1.0, true);			myTween2.start();			t.writeLine("LIKE A REAL PROGRAMMER, YOU ARE ON AN OPPRESSIVE SCHEDULE. YOU WILL HAVE " + ProgrammingGame.START_TIME.toFixed(1) + " SECONDS TO COMPLETE AS MANY LINES OF CODE AS YOU CAN.");			t.writeLine("WHEN YOU'RE READY TO START, TYPE START AND HIT RETURN!");			tip = "Watch the clock in the lower right hand corner. When time runs out, you will have to deliver your code-no exceptions!";									pg = new ProgrammingGame(t,tipText,extras,root,tracker);			pg.start(); 		}	}	}